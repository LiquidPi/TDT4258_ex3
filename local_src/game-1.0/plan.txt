----- Interface for graphics module ----

Top module: draw.h
	-> Draw(list of objects and position)
			Draws the object on screen, at position specified.
	
shapes.h
	-> All types of shapes, with relevant coords (map?).
	-> [list of coords] convert(object, position)
			Converts a object-position to a list of coordinates.
	-> [list of coords] convertAll([object, position])
			Converts all object-position to one big list of coords.
	-> Struct for defining a object-position combo.
	
fbinterface.h
	-> UpdateMap(list of coords)
			Clears the map and draw all coords(pixels)
	-> Clear()
			Clear map
	-> UpdateFB()
			Updates the frame buffer, for changes to apply.
	-> Setup()
			Create map etc.
			
dbginterface.h 
	--Same interface as fbinterface; dev-env by using a graphical window
	--Uses openGL; needs packages
		
		


------ Usage ------
* User run setup.
* User creates a list of objects-position from pre-defined shapes.
* User calls Draw, with list of objects-position.
* fbinterface clears the map
* shapes converts list of objects to list of coordinates
* fbinterface writes map with new list of coords
* fbinterface updates framebuffer, to apply new values.

------ Notes ------
To install OpenGL: sudo apt-get install freeglut3-dev

To compile with openGL: gcc game.c -l glut -o game

Coord system (before interface) have origo in bottom-left corner

output file from compile should be game.gdb for it to run on chip
